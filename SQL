 # 1
SELECT p.FullName, p.PhoneNumber AS Personal_Phone_Number, p.FaxNumber AS Personal_Fax_Number, 
COALESCE(c.PhoneNumber, s.PhoneNumber) AS Company_Phone_Number, COALESCE(c.FaxNumber, s.FaxNumber) AS Company_Fax_Number
FROM Application.People p
LEFT JOIN Sales.Customers c 
ON (p.PersonID = c.PrimaryContactPersonID) OR (p.PersonID = c.AlternateContactPersonID)
LEFT JOIN Purchasing.Suppliers s 
ON (p.PersonID = s.PrimaryContactPersonID) OR (p.PersonID = s.AlternateContactPersonID);

# 2
SELECT c.CustomerName
FROM Application.People p
INNER JOIN Sales.Customers c
ON (p.PersonID = c.PrimaryContactPersonID) AND (p.PhoneNumber = c.PhoneNumber);

# 3
SELECT c.CustomerName, ct.TransactionDate
FROM Sales.Customers c
INNER JOIN Sales.CustomerTransactions ct
ON c.CustomerID = ct.CustomerID
WHERE ct.TransactionDate < '2016-01-01' 
AND ct.CustomerID NOT IN 
(SELECT distinct ct.CustomerID
FROM Sales.CustomerTransactions ct
WHERE ct.TransactionDate > '2016-01-01');

# 4
SELECT s.StockItemName, SUM(s.QuantityPerOuter) as total_quantity
FROM Warehouse.StockItems s
INNER JOIN Purchasing.PurchaseOrderLines p
ON s.StockItemID = p.StockItemID
WHERE YEAR(p.LastReceiptDate)=2013
GROUP BY s.StockItemName;

# 5
SELECT DISTINCT s.StockItemName
FROM Warehouse.StockItems s
INNER JOIN Purchasing.PurchaseOrderLines p
ON s.StockItemID = p.StockItemID
WHERE LEN(p.Description) >= 10;

# 6
SELECT DISTINCT s.StockItemName
FROM Warehouse.StockItems s
INNER JOIN Application.People p
ON s.LastEditedBy = p.PersonID
INNER JOIN Application.StateProvinces sp
ON p.PersonID = sp.LastEditedBy
INNER JOIN Purchasing.PurchaseOrderLines po
ON s.StockItemID = po.StockItemID
WHERE YEAR(po.LastReceiptDate)=2014 AND
sp.StateProvinceName != 'Alabama' OR sp.StateProvinceName != 'Georgia';

# 7
SELECT AVG(DATEDIFF(day, o.OrderDate,i.ConfirmedDeliveryTime)), sp.StateProvinceName
FROM Sales.Invoices i
INNER JOIN Sales.Orders o
ON i.OrderID = o.OrderID
INNER JOIN Application.People p
ON o.LastEditedBy = p.PersonID
INNER JOIN Application.StateProvinces sp
ON p.PersonID = sp.LastEditedBy
GROUP BY sp.StateProvinceName;

# 8
SELECT AVG(DATEDIFF(day, o.OrderDate,i.ConfirmedDeliveryTime)), sp.StateProvinceName,  MONTH(o.OrderDate) AS Month
FROM Sales.Invoices i
INNER JOIN Sales.Orders o
ON i.OrderID = o.OrderID
INNER JOIN Application.People p
ON o.LastEditedBy = p.PersonID
INNER JOIN Application.StateProvinces sp
ON p.PersonID = sp.LastEditedBy
GROUP BY sp.StateProvinceName, MONTH(o.OrderDate);

# 9 
WITH Transaction_table AS (SELECT si.StockItemName,
sum(case when s.Quantity < 0 then s.Quantity else 0 end) OVER(PARTITION BY s.CustomerID) as Sold, 
sum(case when s.Quantity > 0 then s.Quantity else 0 end) OVER (PARTITION BY s.CustomerID) as Purchased
FROM Warehouse.StockItemTransactions s
INNER JOIN Warehouse.StockItems si
ON s.StockItemID = si.StockItemID
WHERE YEAR(s.TransactionOccurredWhen) = 2015) 

SELECT t.StockItemName 
FROM Transaction_table t
WHERE t.Sold < t.Purchased;

# 10
WITH Contact_Table AS (
SELECT c.CustomerID, c.CustomerName, c.PhoneNumber, p.FullName as Primary_Contact_Person
FROM Sales.Customers c
INNER JOIN Application.People p 
ON c.PrimaryContactPersonID = p.PersonID) 

SELECT ct.CustomerName, ct.PhoneNumber, ct.Primary_Contact_Person
FROM Warehouse.StockItemTransactions st
INNER JOIN Warehouse.StockItems s
ON st.StockItemID = s.StockItemID
INNER JOIN Contact_Table ct
ON ct.CustomerID = st.CustomerID 
WHERE YEAR(st.TransactionOccurredWhen) = 2016
AND s.StockItemName LIKE '%mug%'
AND st.Quantity <0 AND st.Quantity >-11

# 11
SELECT c.CityName
FROM Application.Cities c
WHERE c.ValidFrom > '2015-01-01'

# 12
WITH Transaction_info AS(
SELECT s.CustomerID,si.StockItemName,s.Quantity,CAST(s.TransactionOccurredWhen AS date) AS transactiondate
FROM Warehouse.StockItemTransactions s
INNER JOIN Warehouse.StockItems si
ON si.StockItemID = s.StockItemID)

SELECT c.CustomerName, CONCAT(c.DeliveryAddressLine1,c.DeliveryAddressLine2) AS delivery_address,
c.PhoneNumber, c1.CityName, sp.StateProvinceName, c2.CountryName, p.FullName AS contact_person_name,
t.StockItemName, t.StockItemName
FROM Sales.Customers c
INNER JOIN Application.People p
ON c.PrimaryContactPersonID = p.PersonID
INNER JOIN Application.Cities c1
ON c.DeliveryCityID = c1.CityID
INNER JOIN Application.StateProvinces sp
ON sp.StateProvinceID = c1.StateProvinceID
INNER JOIN Application.Countries c2
ON sp.CountryID = c2.CountryID
INNER JOIN Transaction_info t
ON t.CustomerID = c.CustomerID
WHERE t.transactiondate = '2014-07-01'

# 13
WITH stock_transaction_info AS(
SELECT sum(il.Quantity) AS Sold, sum(pol.OrderedOuters) AS Purchased, il.StockItemID
FROM Sales.InvoiceLines il
INNER JOIN Purchasing.PurchaseOrderLines pol
ON il.StockItemID = pol.StockItemID
GROUP BY il.StockItemID)

SELECT sg.StockGroupName, Sold,Purchased,(Purchased - Sold) As Remaining_Stock, sti.StockItemID
FROM Warehouse.StockGroups sg
INNER JOIN Warehouse.StockItemStockGroups sisg
ON sg.StockGroupID = sisg.StockGroupID
INNER JOIN stock_transaction_info sti
ON sisg.StockItemID = sti.StockItemID

# 14 Have no idea about 'no sale'
SELECT Distinct si.StockItemName, c.CityName, MAX(pol.OrderedOuters)OVER(PARTITION BY c.CityName)
FROM Application.Cities c
INNER JOIN Purchasing.Suppliers s
ON c.CityID = s.DeliveryCityID
INNER JOIN Warehouse.StockItems si
ON si.SupplierID = s.SupplierID
INNER JOIN Purchasing.PurchaseOrderLines pol
ON pol.StockItemID = si.StockItemID
INNER JOIN Warehouse.StockItemTransactions sit
ON sit.SupplierID = s.SupplierID
WHERE YEAR(sit.TransactionOccurredWhen) = 2016

# 15
SELECT i.OrderID
FROM Sales.Invoices i
WHERE JSON_VALUE(I.ReturnedDeliveryData, '$."Events"') LIKE '%DeliveryAttempt%DeliveryAttempt%';

# 16
SELECT s.StockItemName
FROM Warehouse.StockItems s
WHERE JSON_VALUE(CustomFields, '$."CountryOfManufacture"') = 'China';

# 17
SELECT SUM(i.Quantity) AS QuantitySold,
JSON_VALUE(s.CustomFields, '$."CountryOfManufacture"') AS ManufactureCountry
FROM Sales.InvoiceLines i
INNER JOIN Warehouse.StockItems s
ON i.StockItemID = s.StockItemID
INNER JOIN Sales.CustomerTransactions c
ON c.InvoiceID = i.InvoiceID
WHERE YEAR(c.TransactionDate) = '2015'
GROUP BY JSON_VALUE(s.CustomFields, '$."CountryOfManufacture"');

# 18
IF OBJECT_ID('Sold_Info_by_Year','view') IS NOT NULL
DROP VIEW Stock_Info;
GO
CREATE VIEW Sold_Info_by_Year
With SCHEMABINDING
AS
SELECT StockGroupName,[2013], [2014], [2015], [2016], [2017]
FROM(
SELECT sg.StockGroupName, SUM(i.Quantity) AS TotalQuantity, YEAR(c.TransactionDate) AS Sold_year
FROM Sales.InvoiceLines i
INNER JOIN Warehouse.StockItemStockGroups sisg
ON i.StockItemID = sisg.StockItemID
INNER JOIN Warehouse.StockGroups sg
ON sisg.StockGroupID = sg.StockGroupID
INNER JOIN Sales.CustomerTransactions c
ON c.InvoiceID = I.InvoiceID
WHERE YEAR(C.TransactionDate) BETWEEN '2013' AND '2017'
GROUP BY YEAR(c.TransactionDate),sg.StockGroupName) AS Sold_Info
PIVOT 
(
SUM(TotalQuantity)
FOR Sold_year IN ([2013], [2014], [2015], [2016], [2017])
) AS PivotTable;

# 19
IF OBJECT_ID('Sold_Info_by_Category','view') IS NOT NULL
DROP VIEW Stock_Info;
GO
CREATE VIEW Sold_Info_by_Category
With SCHEMABINDING
AS
SELECT Sold_year,[T-Shirts], [USB Novelties], [Packaging Materials], 
[Clothing], [Novelty Items],[Furry Footwear],[Mugs],[Computing Novelties],[Toys]
FROM(
SELECT sg.StockGroupName, SUM(i.Quantity) AS TotalQuantity, YEAR(c.TransactionDate) AS Sold_year
FROM Sales.InvoiceLines i
INNER JOIN Warehouse.StockItemStockGroups sisg
ON i.StockItemID = sisg.StockItemID
INNER JOIN Warehouse.StockGroups sg
ON sisg.StockGroupID = sg.StockGroupID
INNER JOIN Sales.CustomerTransactions c
ON c.InvoiceID = I.InvoiceID
WHERE YEAR(C.TransactionDate) BETWEEN '2013' AND '2017'
GROUP BY YEAR(c.TransactionDate),sg.StockGroupName) AS Sold_Info
PIVOT 
(
SUM(TotalQuantity)
FOR StockGroupName IN ([T-Shirts], [USB Novelties], [Packaging Materials], 
[Clothing], [Novelty Items],[Furry Footwear],[Mugs],[Computing Novelties],[Toys])
) AS PivotTable;
